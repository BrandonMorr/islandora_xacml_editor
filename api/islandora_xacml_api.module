<?php

/**
 * @file
 * Islandora Xacml module API functions.
 */

define('MANAGEMENT_RULE', 'deny-management-functions');
define('DATASTREAM_RULE', 'deny-dsid-mime');
define('VIEWING_RULE', 'deny-access-functions');
define('PERMIT_RULE', 'allow-everything-else');

/**
 * Implements hook_menu().
 */
function islandora_xacml_api_menu() {
  $items = array();
  $items['admin/islandora/xacml'] = array(
    'title' => 'Islandora XACML',
    'description' => 'Settings for the Islandora XACML modules.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_xacml_api_settings'),
    'access arguments' => array('administer islandora_xacml_api'),
  );

  $items['admin/islandora/xacml/api'] = array(
    'title' => 'Islandora XACML API',
    'description' => 'Settings for the Islandora XACML API module.',
    'access arguments' => array('administer islandora_xacml_api'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );

  return $items;
}

/**
 * Implements hook_perm().
 */
function islandora_xacml_api_permission() {
  return array(
    'administer islandora_xacml_api' => array(
      'title' => 'Manage XACML API settings.',
    ),
  );
}

/**
 * Admin settings form.
 */
function islandora_xacml_api_settings() {
  $form['islandora_xacml_api_save_relationships'] = array(
    '#type' => 'checkbox',
    '#title' => t('Save relationships'),
    '#description' => t('Causes relationships to be written to the REL-INT/EXT when the policy is saved.'),
    '#default_value' => variable_get('islandora_xacml_api_save_relationships', TRUE),
  );
  $form['islandora_xacml_api_rels_viewable_role'] = array(
    '#type' => 'textfield',
    '#title' => t('Solr RELS-EXT ViewableByRole field'),
    '#default_value' => variable_get('islandora_xacml_api_rels_viewable_role', 'rels.isViewableByRole'),
  );
  $form['islandora_xacml_api_rels_viewable_user'] = array(
    '#type' => 'textfield',
    '#title' => t('Solr RELS-EXT ViewableByUser field'),
    '#default_value' => variable_get('islandora_xacml_api_rels_viewable_user', 'rels.isViewableByUser'),
  );

  return system_settings_form($form);
}

/**
 * Hook to update Solr queries to respect XACML rules.
 *
 * @param IslandoraSolrQueryProcessor $islandora_solr_query
 *   The Solr query processor to apply XACML rules to.
 */
function islandora_xacml_api_islandora_solr_query($islandora_solr_query) {
  global $user;

  if ($user->uid != 0) {
    $user_name = $user->name;
  }
  else {
    $user_name = 'anonymous';
  }

  $fq = variable_get('islandora_xacml_api_rels_viewable_user', 'rels.isViewableByUser') . ":\"" . $user_name . "\" OR ";

  // Check if any of my roles are allowed.
  foreach ($user->roles as $role) {
    $fq .= variable_get('islandora_xacml_api_rels_viewable_role', 'rels.isViewableByRole') . ":\"" . $role . "\" OR ";
  }
  // Check if the object is open (unrestricted).
  $fq .= "((*:* -" . variable_get('islandora_xacml_api_rels_viewable_user', 'rels.isViewableByUser') . ":[* TO *]) AND (*:* -" . variable_get('islandora_xacml_api_rels_viewable_role', 'rels.isViewableByRole') . ":[* TO *]))";
  $islandora_solr_query->solrParams['fq'][] = $fq;
}

/**
 * Hook to update the collection query when XACML is enabled.
 *
 * @note
 *   By default the collection query does not respect XACML rules,
 *   now when the XACML editor module is enabled the
 *   query will be modified to use XACML rules.
 *
 * @param array $query_array
 *   Query array containing pid, type, page_number and page_size
 *
 * @return array
 *   The query_array passed through after modified.
 */
function islandora_xacml_api_islandora_basic_collection_query_alter(&$query_array) {
  global $user;

  $query_string = 'select $object $title $content from <#ri> where
  (
   (
     $object <fedora-model:label> $title
     and $object <fedora-model:hasModel> $content
     and
      (
        $object <fedora-rels-ext:isMemberOfCollection> <info:fedora/' . $query_array['pid'] . '>
        or $object <fedora-rels-ext:isMemberOf> <info:fedora/' . $query_array['pid'] . '>
      )
     and $object <fedora-model:state> <info:fedora/fedora-system:def/model#Active>
     minus $object <http://islandora.ca/ontology/relsext#isViewableByRole> $role
     minus $object <http://islandora.ca/ontology/relsext#isViewableByUser> $user
   ) or
   (
    $object <fedora-model:label> $title
    and $object <fedora-model:hasModel> $content
    and
      (
        $object <fedora-rels-ext:isMemberOfCollection> <info:fedora/' . $query_array['pid'] . '>
        or $object <fedora-rels-ext:isMemberOf> <info:fedora/' . $query_array['pid'] . '>
      )
    and $object <fedora-model:state> <info:fedora/fedora-system:def/model#Active>
    and
     (
     ';
  foreach ($user->roles as $role) {
    $query_string .= '$object <http://islandora.ca/ontology/relsext#isViewableByRole> ' . "'$role' or ";
  }

  if ($user->uid != 0) {
    $user_name = $user->name;
  }
  else {
    $user_name = 'anonymous';
  }
  $query_string .= '$object <http://islandora.ca/ontology/relsext#isViewableByUser> ' . "'$user_name'" . ')';
  $query_string .= ')
  )
  minus $content <mulgara:is> <info:fedora/fedora-system:FedoraObject-3.0>
  order by $title';

  $query_array['query'] = $query_string;
  $query_array['type'] = 'itql';
}
